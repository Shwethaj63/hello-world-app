name: Deploy to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3 # Update to the latest version

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20' # Use Node.js version 20
        check-latest: true
        persist-credentials: false

    - name: Use Node.js version 20.14.0
      run: |
        sudo apt-get install -y nodejs=20.14.0
        sudo apt-get install -y npm=20.14.0

    - name: Log in to Amazon ECR
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: true
      env:
        AWS_REGION: ap-southeast-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Build Docker image
      env:
        ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-1.amazonaws.com
        ECR_REPOSITORY: hello-world-app
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

    - name: Push Docker image to Amazon ECR
      run: |
        docker push ${{ env.IMAGE_URI }}

    - name: Register ECS Task Definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: hello-world-task.json
        container-name: hello-world-app
        image: ${{ env.IMAGE_URI }}

    - name: Deploy to ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        cluster: hello-world-cluster
        service: hello-world-service
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        wait-for-service-stability: true
      env:
        AWS_REGION: ap-southeast-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}






